---
- name: Configure Open vSwitch
  hosts: vie-open-vswitch
  become: true
  tasks:
    - name: Update apt package list
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Open vSwitch package
      ansible.builtin.apt:
        name: openvswitch-switch
        state: present
        update_cache: yes

    - name: Enable Open vSwitch service
      ansible.builtin.systemd:
        name: openvswitch-switch
        enabled: yes
        state: started

    - name: Add bridge Wien-L3-SW1
      ansible.builtin.shell: ovs-vsctl add-br Wien-L3-SW1
      # Die Option "creates" stellt sicher, dass der Befehl nur einmal ausgeführt wird, falls die Bridge bereits existiert.
      args:
        creates: /sys/class/net/Wien-L3-SW1

    - name: Add port VIE_to_Serv_209 to bridge Wien-L3-SW1
      ansible.builtin.shell: ovs-vsctl add-port Wien-L3-SW1 VIE_to_Serv_209
      args:
        creates: /sys/class/net/VIE_to_Serv_209

    - name: Set trunks for port VIE_to_Serv_209
      ansible.builtin.shell: ovs-vsctl set port VIE_to_Serv_209 trunks=207,208,209
      # Hier muss keine `creates`-Option verwendet werden, weil das Setzen der Trunk-Ports keine Datei erstellt oder modifiziert, die überprüft werden könnte.

    - name: Add VLAN 207 to Wien-L3-SW1 bridge
      ansible.builtin.shell: ovs-vsctl add-port Wien-L3-SW1 vlan207 tag=207 -- set interface vlan207 type=internal
      args:
        creates: /sys/class/net/vlan207

    - name: Add VLAN 208 to Wien-L3-SW1 bridge
      ansible.builtin.shell: ovs-vsctl add-port Wien-L3-SW1 vlan208 tag=208 -- set interface vlan208 type=internal
      args:
        creates: /sys/class/net/vlan208

    - name: Add VLAN 209 to Wien-L3-SW1 bridge
      ansible.builtin.shell: ovs-vsctl add-port Wien-L3-SW1 vlan209 tag=209 -- set interface vlan209 type=internal
      args:
        creates: /sys/class/net/vlan209
    
    - name: Apply the complete Netplan configuration with VLANs
      ansible.builtin.copy:
        dest: /etc/netplan/50-cloud-init.yaml
        content: |
          network:
            version: 2
            ethernets:
              ens38:
                dhcp4: true
                match:
                  macaddress: 00:50:56:bc:e0:63
                set-name: outside
              VIE_to_Serv:
                match:
                  macaddress: 00:50:56:bc:b0:26
                set-name: VIE_to_Serv_209
              VIE_201_Serv:
                match:
                  macaddress: 00:50:56:BC:E1:FF
                addresses:
                  - 10.2.0.1/30
                set-name: VIE_201_Serv_HR
              ens33:
                addresses:
                  - 172.16.1.1/24
                match:
                  macaddress: 00:50:56:bc:57:15
                set-name: Extra_mgmt
            vlans:
              vlan207:
                id: 207
                link: VIE_to_Serv
                addresses:
                  - 10.2.1.6/29
              vlan208:
                id: 208
                link: VIE_to_Serv
                addresses:
                  - 10.2.2.6/29
              vlan209:
                id: 209
                link: VIE_to_Serv
                addresses:
                  - 10.2.3.6/29
      notify: Apply the Netplan changes

    - name: Apply the Netplan changes
      ansible.builtin.command:
        cmd: netplan apply
        creates: /run/netplan/50-cloud-init.yaml

    - name: Show Open vSwitch bridges
      ansible.builtin.shell: ovs-vsctl show
      register: ovs_status

    - name: Print OVS status
      ansible.builtin.debug:
        var: ovs_status.stdout
>>>>>>> 37a996dc596d8159c35d4b12a01c72848f9dce52